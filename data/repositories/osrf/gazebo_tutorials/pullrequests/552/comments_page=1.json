{"pagelen": 100, "values": [{"links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552/comments/127985757.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552/_/diff#comment-127985757"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 552, "links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552"}}, "title": "Using `${prefix}/lib` in package.xml plugin_path is wrong."}, "content": {"raw": "An example of a project that uses the suggested `plugin_path=\u201d${prefix}/lib\u201d` is e.g. [https://github.com/pal-robotics/realsense\\_gazebo\\_plugin](https://github.com/pal-robotics/realsense_gazebo_plugin) . When you launch gazebo with this plugin on `ROS_PACKAGE_PATH`, the debug log of `gazebo_ros.paths_plugin` says:\n\n`[DEBUG] [1575894134.676531222]: plugin path /opt/ros/cras_subt/src/realsense_gazebo_plugin/lib`\n\nThat\u2019s apparently wrong, the lib directory cannot be under the sources dir. This will probably be a problem anywhere a devel space is used.", "markup": "markdown", "html": "<p>An example of a project that uses the suggested <code>plugin_path=\u201d${prefix}/lib\u201d</code> is e.g. <a data-is-external-link=\"true\" href=\"https://github.com/pal-robotics/realsense_gazebo_plugin\" rel=\"nofollow\">https://github.com/pal-robotics/realsense_gazebo_plugin</a> . When you launch gazebo with this plugin on <code>ROS_PACKAGE_PATH</code>, the debug log of <code>gazebo_ros.paths_plugin</code> says:</p>\n<p><code>[DEBUG] [1575894134.676531222]: plugin path /opt/ros/cras_subt/src/realsense_gazebo_plugin/lib</code></p>\n<p>That\u2019s apparently wrong, the lib directory cannot be under the sources dir. This will probably be a problem anywhere a devel space is used.</p>", "type": "rendered"}, "created_on": "2019-12-09T13:02:23.775649+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2019-12-09T13:02:24.002214+00:00", "type": "pullrequest_comment", "id": 127985757}, {"links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552/comments/133501342.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552/_/diff#comment-133501342"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 552, "links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552"}}, "title": "Using `${prefix}/lib` in package.xml plugin_path is wrong."}, "content": {"raw": "@{557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1} , it looks like this PR addresses the same concern as pull request #539 in a different way. What do you think about the other approach, @{557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1} ?", "markup": "markdown", "html": "<p><span class=\"ap-mention\" data-atlassian-id=\"557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1\">@Martin Pecka</span> , it looks like this PR addresses the same concern as <a href=\"#!/osrf/gazebo_tutorials/pull-requests/539/fix-example-usage-of-prefix-in-gazebo_ros\" rel=\"nofollow\" class=\"ap-connect-link\">pull request #539</a> in a different way. What do you think about the other approach, <span class=\"ap-mention\" data-atlassian-id=\"557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1\">@Martin Pecka</span> ?</p>", "type": "rendered"}, "created_on": "2020-01-28T19:44:24.789253+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2020-01-28T19:44:24.799849+00:00", "type": "pullrequest_comment", "id": 133501342}, {"links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552/comments/133513660.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552/_/diff#comment-133513660"}}, "parent": {"id": 133501342, "links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552/comments/133501342.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552/_/diff#comment-133501342"}}, "depth": 1}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 552, "links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552"}}, "title": "Using `${prefix}/lib` in package.xml plugin_path is wrong."}, "content": {"raw": "I\u2019m pretty sure there isn\u2019t any single relative path against `${prefix}` that would work in all cases. For basic packages that are located directly under `src/`, the solution suggested in !539 will work with all of catkin\\_make, catkin\\_make\\_isolated and catkin tools. As well as for install packages. But for packages that are located in some subfolder of `src/`, that approach wouldn\u2019t work.\n\nAccording to the [source](https://github.com/ros/rospack/blob/cb4c93abfccc9617578b6765f6dfeb54f9a50d71/src/rospack.cpp#L2186), `${prefix}` will always expand to the path to the package. In install spaces, that is `share/package_name`. So `${prefix}/../../lib` is `share/package_name/../../lib`, which expands to `lib`, which is correct. But in devel spaces, `${prefix}` points to the path to the package source, which may be many levels deep under `src/`. E.g. for a package located at `src/ethzasl_icp_mapping/ethzasl_icp_mapper` \\(to be concrete\\), `${prefix}/../../lib` is `src/ethzasl_icp_mapping/ethzasl_icp_mapper/../../lib`, which expands to `src/lib`, which is obviously incorrect. And we could go even deeper\u2026\n\nThe solution I propose works in all cases except when there are multiple locations for the same library and the first one found by catkin isn\u2019t correct. But that, I\u2019d say, is an ill-defined scenario. If I get it correctly, catkin\\_find should respect ROS\\_PACKAGE PATH.\n\nAnd, also, my solution doesn\u2019t work on Windows. But I don\u2019t think gazebo\\_ros\\_pkgs are supposed to work under windows anyways, are they? Solving this issue on Windows would probably need some work on the side of rospack, e.g. to provide another expansion variable for the lib folder, or for calling catkin\\_find in a platform-independent way \\(there\u2019s still the dirname we need to call, but in worst case it could be substituted by appending `/..`, although I don\u2019t like directory paths like `lib/libgazebo_realsense_plugin.so/..`\\).", "markup": "markdown", "html": "<p>I\u2019m pretty sure there isn\u2019t any single relative path against <code>${prefix}</code> that would work in all cases. For basic packages that are located directly under <code>src/</code>, the solution suggested in !539 will work with all of catkin_make, catkin_make_isolated and catkin tools. As well as for install packages. But for packages that are located in some subfolder of <code>src/</code>, that approach wouldn\u2019t work.</p>\n<p>According to the <a data-is-external-link=\"true\" href=\"https://github.com/ros/rospack/blob/cb4c93abfccc9617578b6765f6dfeb54f9a50d71/src/rospack.cpp#L2186\" rel=\"nofollow\">source</a>, <code>${prefix}</code> will always expand to the path to the package. In install spaces, that is <code>share/package_name</code>. So <code>${prefix}/../../lib</code> is <code>share/package_name/../../lib</code>, which expands to <code>lib</code>, which is correct. But in devel spaces, <code>${prefix}</code> points to the path to the package source, which may be many levels deep under <code>src/</code>. E.g. for a package located at <code>src/ethzasl_icp_mapping/ethzasl_icp_mapper</code> (to be concrete), <code>${prefix}/../../lib</code> is <code>src/ethzasl_icp_mapping/ethzasl_icp_mapper/../../lib</code>, which expands to <code>src/lib</code>, which is obviously incorrect. And we could go even deeper\u2026</p>\n<p>The solution I propose works in all cases except when there are multiple locations for the same library and the first one found by catkin isn\u2019t correct. But that, I\u2019d say, is an ill-defined scenario. If I get it correctly, catkin_find should respect ROS_PACKAGE PATH.</p>\n<p>And, also, my solution doesn\u2019t work on Windows. But I don\u2019t think gazebo_ros_pkgs are supposed to work under windows anyways, are they? Solving this issue on Windows would probably need some work on the side of rospack, e.g. to provide another expansion variable for the lib folder, or for calling catkin_find in a platform-independent way (there\u2019s still the dirname we need to call, but in worst case it could be substituted by appending <code>/..</code>, although I don\u2019t like directory paths like <code>lib/libgazebo_realsense_plugin.so/..</code>).</p>", "type": "rendered"}, "created_on": "2020-01-28T21:28:29.209062+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2020-01-28T21:28:29.720982+00:00", "type": "pullrequest_comment", "id": 133513660}, {"links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552/comments/133532558.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552/_/diff#comment-133532558"}}, "parent": {"id": 133513660, "links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552/comments/133513660.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552/_/diff#comment-133513660"}}, "depth": 2}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 552, "links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552"}}, "title": "Using `${prefix}/lib` in package.xml plugin_path is wrong."}, "content": {"raw": "Thank you for the explanation, I see your point about nested packages. I've never used `catkin_find`, so I'm not sure about all the drawbacks. One which I can see right now is that the library name must be hardcoded in the `package.xml` file, which is prone to errors since the name could change on `CMakeLists`.\n\nIn fact, lately I've been seeing env hooks being the recommended way of setting environment variables. They're generated by cmake, so the install paths can be derived directly, and they're introspectable after sourcing the workspace. Maybe that should be what we recommend here as well. I've also seen people who prefer just setting the environment variables directly on launch files.\n\n> But I don\u2019t think gazebo_ros_pkgs are supposed to work under windows anyways, are they?\n\nIt's my understanding that [they work](https://github.com/ros-simulation/gazebo_ros_pkgs/pulls?q=is%3Apr+author%3Aseanyen+is%3Aclosed), but I haven't tried it.\n\n", "markup": "markdown", "html": "<p>Thank you for the explanation, I see your point about nested packages. I've never used <code>catkin_find</code>, so I'm not sure about all the drawbacks. One which I can see right now is that the library name must be hardcoded in the <code>package.xml</code> file, which is prone to errors since the name could change on <code>CMakeLists</code>.</p>\n<p>In fact, lately I've been seeing env hooks being the recommended way of setting environment variables. They're generated by cmake, so the install paths can be derived directly, and they're introspectable after sourcing the workspace. Maybe that should be what we recommend here as well. I've also seen people who prefer just setting the environment variables directly on launch files.</p>\n<blockquote>\n<p>But I don\u2019t think gazebo_ros_pkgs are supposed to work under windows anyways, are they?</p>\n</blockquote>\n<p>It's my understanding that <a data-is-external-link=\"true\" href=\"https://github.com/ros-simulation/gazebo_ros_pkgs/pulls?q=is%3Apr+author%3Aseanyen+is%3Aclosed\" rel=\"nofollow\">they work</a>, but I haven't tried it.</p>", "type": "rendered"}, "created_on": "2020-01-29T01:16:42.093346+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2020-01-29T01:16:42.101856+00:00", "type": "pullrequest_comment", "id": 133532558}, {"links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552/comments/133533255.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552/_/diff#comment-133533255"}}, "parent": {"id": 133532558, "links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552/comments/133532558.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552/_/diff#comment-133532558"}}, "depth": 3}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 552, "links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552"}}, "title": "Using `${prefix}/lib` in package.xml plugin_path is wrong."}, "content": {"raw": "You\u2019re right that env hooks might be better for this use case. I\u2019ve never seen ones working on Windows, but maybe Sean can come up with something\u2026 Env hooks are definitely closest to the place where the paths are decided/generated. And it would solve nicely problems like [https://github.com/ros-simulation/gazebo\\_ros\\_pkgs/pull/993](https://github.com/ros-simulation/gazebo_ros_pkgs/pull/993) .", "markup": "markdown", "html": "<p>You\u2019re right that env hooks might be better for this use case. I\u2019ve never seen ones working on Windows, but maybe Sean can come up with something\u2026 Env hooks are definitely closest to the place where the paths are decided/generated. And it would solve nicely problems like <a data-is-external-link=\"true\" href=\"https://github.com/ros-simulation/gazebo_ros_pkgs/pull/993\" rel=\"nofollow\">https://github.com/ros-simulation/gazebo_ros_pkgs/pull/993</a> .</p>", "type": "rendered"}, "created_on": "2020-01-29T01:28:11.753100+00:00", "user": {"display_name": "Martin Pecka", "uuid": "{41691c43-4ae0-49ba-ba45-3c36439f5af2}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D"}, "html": {"href": "https://bitbucket.org/%7B41691c43-4ae0-49ba-ba45-3c36439f5af2%7D/"}, "avatar": {"href": "data/secure.gravatar.com/avatar/d1ad32a09564f856909994613fdbc37cd=httpsavatar-management--avatars.us-west-2.prod.public.atl-paas.netinitialsMP-1.png"}}, "nickname": "peci1", "type": "user", "account_id": "557058:434ecab2-e510-4ede-8f9a-1c2a5a4032e1"}, "updated_on": "2020-01-29T01:28:12.013002+00:00", "type": "pullrequest_comment", "id": 133533255}, {"links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552/comments/146519549.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552/_/diff#comment-146519549"}}, "deleted": false, "pullrequest": {"type": "pullrequest", "id": 552, "links": {"self": {"href": "data/repositories/osrf/gazebo_tutorials/pullrequests/552.json"}, "html": {"href": "#!/osrf/gazebo_tutorials/pull-requests/552"}}, "title": "Using `${prefix}/lib` in package.xml plugin_path is wrong."}, "content": {"raw": "This pull request wasn't merged in time for the GitHub migration. I've pulled this branch into our repository so it will be migrated to GitHub together with the rest of the code. Feel free to reopen the pull request there.", "markup": "markdown", "html": "<p>This pull request wasn't merged in time for the GitHub migration. I've pulled this branch into our repository so it will be migrated to GitHub together with the rest of the code. Feel free to reopen the pull request there.</p>", "type": "rendered"}, "created_on": "2020-04-22T23:42:48.865408+00:00", "user": {"display_name": "Louise Poubel", "uuid": "{5cfa2075-477b-4ded-bdb9-8d2479544ec4}", "links": {"self": {"href": "https://api.bitbucket.org/2.0/users/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D"}, "html": {"href": "https://bitbucket.org/%7B5cfa2075-477b-4ded-bdb9-8d2479544ec4%7D/"}, "avatar": {"href": "https://avatar-management--avatars.us-west-2.prod.public.atl-paas.net/557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8/7d903d90-c5ea-4182-b7ef-0d467e9e1c74/128"}}, "nickname": "chapulina", "type": "user", "account_id": "557058:6ff86fcb-b7ab-44a5-b8a6-f6d9cae8b6e8"}, "updated_on": "2020-04-22T23:42:48.870387+00:00", "type": "pullrequest_comment", "id": 146519549}], "page": 1, "size": 6}